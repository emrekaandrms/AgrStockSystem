{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a\\\\Desktop\\\\AllegroERP\\\\project-root\\\\frontend\\\\src\\\\components\\\\ProductTable.tsx\";\nimport React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ProductTable({\n  products,\n  onSelectionChange,\n  selectable = false\n}) {\n  const columns = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 70\n  }, {\n    field: 'sku',\n    headerName: 'SKU',\n    width: 150\n  }, {\n    field: 'weight',\n    headerName: 'Ağırlık',\n    width: 100\n  }, {\n    field: 'thickness',\n    headerName: 'Kalınlık',\n    width: 100\n  }, {\n    field: 'width',\n    headerName: 'Genişlik',\n    width: 100\n  }, {\n    field: 'length',\n    headerName: 'Uzunluk',\n    width: 100\n  }, {\n    field: 'status',\n    headerName: 'Durum',\n    width: 120\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 400,\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: products,\n      columns: columns,\n      checkboxSelection: selectable,\n      initialState: {\n        pagination: {\n          paginationModel: {\n            pageSize: 5,\n            page: 0\n          }\n        }\n      },\n      pageSizeOptions: [5, 10, 25],\n      onRowSelectionModelChange: newSelectionModel => {\n        if (onSelectionChange) onSelectionChange(newSelectionModel);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_c = ProductTable;\nvar _c;\n$RefreshReg$(_c, \"ProductTable\");","map":{"version":3,"names":["React","DataGrid","jsxDEV","_jsxDEV","ProductTable","products","onSelectionChange","selectable","columns","field","headerName","width","style","height","children","rows","checkboxSelection","initialState","pagination","paginationModel","pageSize","page","pageSizeOptions","onRowSelectionModelChange","newSelectionModel","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/a/Desktop/AllegroERP/project-root/frontend/src/components/ProductTable.tsx"],"sourcesContent":["import React from 'react';\nimport { DataGrid, GridColDef, GridSelectionModel } from '@mui/x-data-grid';\nimport { Product } from '../types/types';\n\ninterface Props {\n  products: Product[];\n  onSelectionChange?: (ids: number[]) => void;\n  selectable?: boolean;\n}\n\nexport function ProductTable({ products, onSelectionChange, selectable = false }: Props) {\n  const columns: GridColDef[] = [\n    { field: 'id', headerName: 'ID', width: 70 },\n    { field: 'sku', headerName: 'SKU', width: 150 },\n    { field: 'weight', headerName: 'Ağırlık', width: 100 },\n    { field: 'thickness', headerName: 'Kalınlık', width: 100 },\n    { field: 'width', headerName: 'Genişlik', width: 100 },\n    { field: 'length', headerName: 'Uzunluk', width: 100 },\n    { field: 'status', headerName: 'Durum', width: 120 },\n  ];\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGrid\n        rows={products}\n        columns={columns}\n        checkboxSelection={selectable}\n        initialState={{\n          pagination: {\n            paginationModel: { pageSize: 5, page: 0 }\n          }\n        }}\n        pageSizeOptions={[5, 10, 25]}\n        onRowSelectionModelChange={(newSelectionModel: GridSelectionModel) => {\n          if (onSelectionChange) onSelectionChange(newSelectionModel as number[]);\n        }}\n      />\n    </div>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAwC,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS5E,OAAO,SAASC,YAAYA,CAAC;EAAEC,QAAQ;EAAEC,iBAAiB;EAAEC,UAAU,GAAG;AAAa,CAAC,EAAE;EACvF,MAAMC,OAAqB,GAAG,CAC5B;IAAEC,KAAK,EAAE,IAAI;IAAEC,UAAU,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAG,CAAC,EAC5C;IAAEF,KAAK,EAAE,KAAK;IAAEC,UAAU,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAI,CAAC,EAC/C;IAAEF,KAAK,EAAE,QAAQ;IAAEC,UAAU,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAI,CAAC,EACtD;IAAEF,KAAK,EAAE,WAAW;IAAEC,UAAU,EAAE,UAAU;IAAEC,KAAK,EAAE;EAAI,CAAC,EAC1D;IAAEF,KAAK,EAAE,OAAO;IAAEC,UAAU,EAAE,UAAU;IAAEC,KAAK,EAAE;EAAI,CAAC,EACtD;IAAEF,KAAK,EAAE,QAAQ;IAAEC,UAAU,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAI,CAAC,EACtD;IAAEF,KAAK,EAAE,QAAQ;IAAEC,UAAU,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAI,CAAC,CACrD;EAED,oBACER,OAAA;IAAKS,KAAK,EAAE;MAAEC,MAAM,EAAE,GAAG;MAAEF,KAAK,EAAE;IAAO,CAAE;IAAAG,QAAA,eACzCX,OAAA,CAACF,QAAQ;MACPc,IAAI,EAAEV,QAAS;MACfG,OAAO,EAAEA,OAAQ;MACjBQ,iBAAiB,EAAET,UAAW;MAC9BU,YAAY,EAAE;QACZC,UAAU,EAAE;UACVC,eAAe,EAAE;YAAEC,QAAQ,EAAE,CAAC;YAAEC,IAAI,EAAE;UAAE;QAC1C;MACF,CAAE;MACFC,eAAe,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAE;MAC7BC,yBAAyB,EAAGC,iBAAqC,IAAK;QACpE,IAAIlB,iBAAiB,EAAEA,iBAAiB,CAACkB,iBAA6B,CAAC;MACzE;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACC,EAAA,GA7BezB,YAAY;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}