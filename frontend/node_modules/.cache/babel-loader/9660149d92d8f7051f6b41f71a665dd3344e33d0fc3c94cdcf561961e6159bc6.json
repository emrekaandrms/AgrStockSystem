{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a\\\\Desktop\\\\AllegroERP\\\\project-root\\\\frontend\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({\n  token: null,\n  role: null,\n  setToken: () => {},\n  setRole: () => {}\n});\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [token, setTokenState] = useState(localStorage.getItem('token'));\n  const [role, setRoleState] = useState(localStorage.getItem('role'));\n  useEffect(() => {\n    if (token) localStorage.setItem('token', token);else localStorage.removeItem('token');\n    if (role) localStorage.setItem('role', role);else localStorage.removeItem('role');\n  }, [token, role]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token,\n      role,\n      setToken: t => setTokenState(t),\n      setRole: r => setRoleState(r)\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"utZXrk6/qUOH4z0PLkXzI5k9+u8=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","token","role","setToken","setRole","AuthProvider","children","_s","setTokenState","localStorage","getItem","setRoleState","setItem","removeItem","Provider","value","t","r","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/a/Desktop/AllegroERP/project-root/frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\ninterface AuthContextType {\n  token: string|null;\n  role: string|null;\n  setToken: (t:string)=>void;\n  setRole: (r:string)=>void;\n}\n\nexport const AuthContext = createContext<AuthContextType>({\n  token:null,\n  role:null,\n  setToken: ()=>{},\n  setRole: ()=>{}\n});\n\nexport const AuthProvider:React.FC<{children:React.ReactNode}> = ({children}) => {\n  const [token, setTokenState] = useState<string|null>(localStorage.getItem('token'));\n  const [role, setRoleState] = useState<string|null>(localStorage.getItem('role'));\n\n  useEffect(()=>{\n    if(token) localStorage.setItem('token', token);\n    else localStorage.removeItem('token');\n    if(role) localStorage.setItem('role', role);\n    else localStorage.removeItem('role');\n  },[token, role]);\n\n  return (\n    <AuthContext.Provider value={{\n      token,\n      role,\n      setToken:(t)=>setTokenState(t),\n      setRole:(r)=>setRoleState(r)\n    }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASlE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAkB;EACxDM,KAAK,EAAC,IAAI;EACVC,IAAI,EAAC,IAAI;EACTC,QAAQ,EAAEA,CAAA,KAAI,CAAC,CAAC;EAChBC,OAAO,EAAEA,CAAA,KAAI,CAAC;AAChB,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAiD,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC/E,MAAM,CAACN,KAAK,EAAEO,aAAa,CAAC,GAAGZ,QAAQ,CAAca,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EACnF,MAAM,CAACR,IAAI,EAAES,YAAY,CAAC,GAAGf,QAAQ,CAAca,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EAEhFb,SAAS,CAAC,MAAI;IACZ,IAAGI,KAAK,EAAEQ,YAAY,CAACG,OAAO,CAAC,OAAO,EAAEX,KAAK,CAAC,CAAC,KAC1CQ,YAAY,CAACI,UAAU,CAAC,OAAO,CAAC;IACrC,IAAGX,IAAI,EAAEO,YAAY,CAACG,OAAO,CAAC,MAAM,EAAEV,IAAI,CAAC,CAAC,KACvCO,YAAY,CAACI,UAAU,CAAC,MAAM,CAAC;EACtC,CAAC,EAAC,CAACZ,KAAK,EAAEC,IAAI,CAAC,CAAC;EAEhB,oBACEH,OAAA,CAACC,WAAW,CAACc,QAAQ;IAACC,KAAK,EAAE;MAC3Bd,KAAK;MACLC,IAAI;MACJC,QAAQ,EAAEa,CAAC,IAAGR,aAAa,CAACQ,CAAC,CAAC;MAC9BZ,OAAO,EAAEa,CAAC,IAAGN,YAAY,CAACM,CAAC;IAC7B,CAAE;IAAAX,QAAA,EACCA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAAd,EAAA,CArBYF,YAAiD;AAAAiB,EAAA,GAAjDjB,YAAiD;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}